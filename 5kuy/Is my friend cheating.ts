{/*
*Мой друг берет последовательность всех чисел от 1 до n (где n > 0).
* В этой последовательности он выбирает два числа, a и b.
* Он говорит, что произведение a и b должно быть равно сумме всех чисел в последовательности, исключая a и b.
* Учитывая число n, скажите, какие числа он исключил из последовательности?
*
* Функция принимает параметр:
* * n (n всегда строго больше 0) и возвращает массив или строку (в зависимости от языка) вида:
* * [(a, b), ...] or [[a, b], ...] or {{a, b}, ...} or or [{a, b}, ...]
*
*будут отсортированы в порядке возрастания буквы "a".

Случается, что существует несколько возможных (a, b).
* Функция вернет пустой массив (или пустую строку),
*  если не будет найдено ни одного возможного числа, что докажет, что мой друг не сказал правду!
*  (Go: в этом случае возвращается nil).

Примеры:
removNb(26) должна вернуть [(15, 21), (21, 15)]
или
removNb(26) должен возвращать { {15, 21}, {21, 15} }
или
removeNb(26) должен возвращать [[15, 21], [21, 15]]
или
removeNb(26) должен вернуть [ { {15, 21}, {21, 15} ]
или
removNb(26) должен вернуть "15 21, 21 15"
*
* */}
type Pair = [number, number];

export function removeNb(n: number): Pair[] {
    let sum = n * (n + 1) / 2; // Sum of all numbers from 1 to n
    let pairs: Pair[] = [];

    for (let a = 1; a <= n; a++) {
        for (let b = a + 1; b <= n; b++) {
            if (a * b === sum - (a + b)) {
                pairs.push([a, b]);
            }
        }
    }

    // Add the symmetric pairs
    for (let i = 0; i < pairs.length; i++) {
        let [a, b] = pairs[i];
        if (!pairs.some(pair => pair[0] === b && pair[1] === a)) {
            pairs.push([b, a]);
        }
    }

    return pairs;
}

