/**
 *
 * Задача
 *
 * Суммировать все числа заданного массива (cq. list),
 * кроме самого высокого и самого низкого элемента (по значению, а не по индексу!). С
 *
 * амый высокий или самый низкий элемент соответственно - это один элемент на каждом краю, даже если их несколько с одинаковым значением.
 * Проверьте правильность ввода.
 *
 * { 6, 2, 1, 8, 10 } => 16
 * { 1, 1, 11, 2, 3 } => 6
 *
 * Входная проверка
 *
 * Если вместо массива задано пустое значение ( null, None, Nothing, nil и т. д.),
 * или заданный массив является пустым списком
 * или списком, содержащим только 1 элемент, возвращается 0.
 */

function sumArray(array) {
    if (array == null || array.length <= 1) {
        return 0
    } else {
        let sortedArr = array.sort((a, b) => a - b).slice(1, array.length - 1)// Сортируем массив
        return sortedArr.reduce((accum, curr) => {
                return  accum + curr
            }, 0)
    }
}

/*sumArray(null) // 0
sumArray([]) // 0
sumArray([3]) // 0
sumArray([3, 5])
sumArray([6, 2, 1, 8, 10]) // 16
sumArray([0, 1, 6, 10, 10])  //17
sumArray([-6, -20, -1, -10, -12]) // -28
sumArray([-6, 20, -1, 10, -12])  // 3*/
sumArray({a:-6, b:20, c:-1, d:10, e:-12})  // 3

