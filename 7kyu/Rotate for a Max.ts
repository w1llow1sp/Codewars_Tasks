{/*
* Давайте начнем с примера:

Возьмем число: 56789. Поверните его влево, и вы получите 67895.

Сохраните первую цифру на месте и поверните влево остальные цифры: 68957.

Сохраните первые две цифры на месте и поверните остальные: 68579.

Сохраните первые три цифры и поверните влево остальные: 68597. Теперь все кончено, так как при сохранении первых четырех остается только одна цифра, которая поворачивается сама.

У вас получилась следующая последовательность чисел:

56789 -> 67895 -> 68957 -> 68579 -> 68597

и вы должны вернуть наибольшее из них: 68957.

Задание
Напишите функцию max_rot(n), которая при заданном положительном целом n возвращает максимальное число, полученное при выполнении вращений, аналогичных приведенному выше примеру.

Таким образом, max_rot (или maxRot, или ... в зависимости от языка) имеет вид:

max_rot(56789) должно вернуть 68957

max_rot(38458215) должен вернуть 85821534
* */}

export function maxRot(n: number): number {
    let num = n.toString();
    let max = num;

    for (let i =  0; i < num.length -  1; i++) {
        num = num.slice(0, i) + num.slice(i +  1) + num[i];
        if (num > max) {
            max = num;
        }
    }

    return parseInt(max);
}
