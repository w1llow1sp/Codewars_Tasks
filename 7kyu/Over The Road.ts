{/*
* Задача
Вы только что переехали на идеально прямую улицу с n одинаковыми домами по обе стороны дороги.
* Естественно, вы хотели бы узнать номер дома людей, живущих на другой стороне улицы.
* Улица выглядит примерно так:

Улица
1| |6
3| |4
5| |2
  вы
Четные числа увеличиваются справа,
*  нечетные уменьшаются слева.
*  Номера домов начинаются с 1 и увеличиваются без промежутков.
* Когда n = 3, 1 находится напротив 6, 3 - напротив 4, а 5 - напротив 2.

Пример (адрес, n --> выход)
Учитывая адрес вашего дома и длину улицы n, укажите номер дома на противоположной стороне улицы.

1, 3 --> 6
3, 3 --> 4
2, 3 --> 5
3, 5 --> 8
Замечание об ошибках
Если у вас сбивается тайминг, заканчивается память или возникает какая-либо "ошибка", читайте дальше. И n, и адрес могут достигать 500 миллиардов при более чем 200 случайных проверках. Если вы попытаетесь сохранить адреса 500 миллиардов домов в списке, то у вас закончится память и тесты завершатся. Это не проблема ката, поэтому, пожалуйста, не пишите об этом. Аналогично, если тесты не завершаются в течение 12 секунд, вы также потерпите неудачу.

Чтобы решить эту проблему, вам нужно придумать способ выполнения ката без создания массивных списков или огромных циклов for. Почитайте эти рассуждения для вдохновения :)*/}



export function overTheRoad(address: number, n: number): number {
return  2 * n - address + 1
}


overTheRoad(1, 3) //6
overTheRoad(3, 3) //4
overTheRoad(2, 3) //5
overTheRoad(3, 5) //8
overTheRoad(7, 11)//16