{/*
* Если взять строку "abc" и предположить,
*  что каждая буква в строке имеет значение, равное ее позиции в алфавите,
*  то наша строка будет иметь значение 1 + 2 + 3 = 6. Это означает, что: a = 1, b = 2, c = 3 ....z = 26.

Вам будет дан список строк, и ваша задача - вернуть значения строк, как объяснялось выше,
*  умноженные на позицию этой строки в списке. Для нашей цели позиция начинается с 1.

nameValue ["abc", "abc abc"] должно вернуть [6,24], поскольку [ 6 * 1, 12 * 2 ]. Обратите внимание, что пробелы игнорируются.

Значение "abc" равно 6, а значение "abc abc" равно 12.
*  Теперь значение в позиции 1 умножается на 1, а значение в позиции 2 умножается на 2.

Ввод содержит только строчные символы и пробелы.

Удачи!
* */
}

export function wordValue(arr: string[]) {
    return arr.map((word, index) => {
        // Удаление пробелов и преобразование строки в массив символов
        const letters = word.replace(/\s+/g, '').split('');
        // Вычисление суммы значений букв
        const wordValue = letters.reduce((sum, letter) => sum + letter.charCodeAt(0) - 96, 0);
        // Умножение значения слова на его позицию в массиве
        return wordValue * (index + 1);
    });
}


{/*
export function wordValue(arr: string[]): number[] {
  const w : string = ' abcdefghijklmnopqrstuvwxyz'
  return arr.map((x, i) => x.split('').reduce((sum, y) => sum + w.indexOf(y) , 0) * (i + 1))
}
*/}
