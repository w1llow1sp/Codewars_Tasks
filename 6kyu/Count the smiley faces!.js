{/*
* Получив в качестве аргумента массив (arr), выполните функцию countSmileys, которая должна вернуть общее количество улыбающихся лиц.

Правила для улыбающегося лица:

Каждый смайлик должен содержать правильную пару глаз. Глаза могут быть обозначены как : или ;
У смайлика может быть нос, но не обязательно. Допустимыми символами для носа являются - или ~.
У каждого улыбающегося лица должен быть улыбающийся рот, который должен быть обозначен либо ), либо D
Никакие дополнительные символы, кроме упомянутых, не допускаются.

Примеры допустимых смайликов: :) :D ;-D :~)
Недопустимые смайлики: ;( :> :} :]*

* Пример
countSmileys([':)', ';(', ';}', ':-D']); // должно возвращаться 2;
countSmileys([';D', ':-(', ':-)', ';~)']); // должно возвращаться 3;
countSmileys([';]', ':[', ';*', ':$', ';-D']); // должно возвращаться 1;
Примечание
В случае пустого массива возвращается 0.
*  Проверка при недействительном вводе не проводится (вводом всегда будет массив).
*  Порядок элементов лица (глаза, нос, рот) всегда будет одинаковым.*/}

function countSmileys(arr) {
        // Создаём регулярное выражение для соответствия улыбающимся лицам
        // Глаза: ':' или ';'
        // Нос (необязательный): '-' или '~'
        // Рот: ')' или 'D'
        const smileRegex = /^[:;][-~]?[)D]$/;

        // Фильтруем массив, оставляя только элементы, которые соответствуют регулярному выражению
        const validSmileys = arr.filter(smiley => smileRegex.test(smiley));

        // Возвращаем количество улыбающихся лиц
        return validSmileys.length;
}


{/*
function countSmileys(arr) {
  return arr.filter(x => /^[:;][-~]?[)D]$/.test(x)).length;
}
*/}
