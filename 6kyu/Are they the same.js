{/*
* Для двух массивов a и b напишите функцию comp(a, b) (илиcompSame(a, b)),
*  которая проверяет, есть ли в этих двух массивах "одинаковые" элементы с одинаковой кратностью
* (кратность члена - это количество раз, которое он встречается).
*  В данном случае "одинаковые" означает, что элементы в b - это элементы в квадрате a, независимо от порядка.

Примеры
Допустимые массивы
a = [121, 144, 19, 161, 19, 144, 19, 11]
b = [121, 14641, 20736, 361, 25921, 361, 20736, 361]
comp(a, b) возвращает true, потому что в b 121 - квадрат 11, 14641 - квадрат 121, 20736 - квадрат 144, 361 - квадрат 19, 25921 - квадрат 161, и так далее. Это становится очевидным, если записать элементы b в терминах квадратов:

a = [121, 144, 19, 161, 19, 144, 19, 11]
b = [11*11, 121*121, 144*144, 19*19, 161*161, 19*19, 144*144, 19*19]
Некорректные массивы
Если, например, заменить первое число на другое, comp больше не будет возвращать true:

a = [121, 144, 19, 161, 19, 144, 19, 11]
b = [132, 14641, 20736, 361, 25921, 361, 20736, 361]
comp(a,b) возвращает false, потому что в b 132 не является квадратом ни одного числа из a.

a = [121, 144, 19, 161, 19, 144, 19, 11]
b = [121, 14641, 20736, 36100, 25921, 361, 20736, 361]
comp(a,b) возвращает false, потому что в b 36100 не является квадратом ни одного числа из a.

Замечания
a или b могут быть [] или {} (все языки, кроме R, Shell).
a или b может быть nil или null или None или nothing (кроме C++, COBOL, Crystal, D, Dart, Elixir, Fortran, F#, Haskell, Nim, OCaml, Pascal, Perl, PowerShell, Prolog, PureScript, R, Racket, Rust, Shell, Swift).
Если a или b равны nil (или null, или None, в зависимости от языка), проблема не имеет смысла, поэтому возвращается false.
* */}
function comp(array1, array2) {
    // Проверяем, являются ли оба аргумента массивами
    if (!Array.isArray(array1) || !Array.isArray(array2)) {
        return false;
    }

    // Если оба массива пусты, возвращаем true
    if (array1.length ===  0 && array2.length ===  0) {
        return true;
    }

    // Создаем новый массив, содержащий квадраты элементов array1
    let array1Squared = array1.map(v => v * v);

    // Сортируем оба массива для сравнения
    array1Squared.sort((a, b) => a - b);
    array2.sort((a, b) => a - b);

    // Сравниваем массивы
    return array1Squared.every((value, index) => value === array2[index]);
}
{/*
function comp(array1, array2) {
  if(array1 == null || array2 == null) return false;
  array1.sort((a, b) => a - b); array2.sort((a, b) => a - b);
  return array1.map(v => v * v).every((v, i) => v == array2[i]);
}*/}
